(function(){"use strict";try{if(typeof document<"u"){var e=document.createElement("style");e.appendChild(document.createTextNode(".v-switch .v-input__details[data-v-83d65bb7]{align-items:center;padding:0}")),document.head.appendChild(e)}}catch(t){console.error("vite-plugin-css-injected-by-js",t)}})();
(function(o,a){typeof exports=="object"&&typeof module<"u"?a(exports,require("vue"),require("vuex")):typeof define=="function"&&define.amd?define(["exports","vue","vuex"],a):(o=typeof globalThis<"u"?globalThis:o||self,a(o["ui-web-push"]={},o.Vue,o.vuex))})(this,function(o,a,c){"use strict";const h=(e,t)=>{const s=e.__vccOpts||e;for(const[r,i]of t)s[r]=i;return s},d={name:"UIWebPush",inject:["$socket"],props:{id:{type:String,required:!0},props:{type:Object,default:()=>({})},state:{type:Object,default:()=>({enabled:!1,visible:!1})}},setup(e){console.info("UIWebPush setup with:",e),console.debug("Vue function loaded correctly",a.markRaw)},data(){return{switchState:!1,switchEnabled:!1,switchLabel:this.props.switchLabel,switchMessage:"",loadingEnabled:!1,serviceWorkerRegistration:null}},computed:{...c.mapState("data",["messages"])},mounted(){if(this.$socket.on("widget-load:"+this.id,t=>{this.$store.commit("data/bind",{widgetId:this.id,msg:t})}),this.$socket.on("msg-input:"+this.id,t=>{switch(this.$store.commit("data/bind",{widgetId:this.id,msg:t}),t.topic){case"reload_service_worker":if(!("serviceWorker"in navigator)){console.log("Cannot reload service worker, because service workers are NOT supported by this browser!");return}this.serviceWorkerRegistration&&(this.serviceWorkerRegistration.update(),console.log("The registration has been updated"));break;case"fetch_subscriptions":this.serviceWorkerRegistration.pushManager.getSubscription().then(s=>{s&&this.send({payload:s,topic:"fetched_subscription"})}).catch(s=>{this.send({payload:`Cannot get a subscription from the service worker:
`+s,topic:"error"})});break}}),this.$socket.emit("widget-load",this.id),this.setSwitchMessage("Not subscribed for receiving notifications"),!("serviceWorker"in navigator)){window.location.protocol==="http:"?this.setSwitchMessage("No service worker support (when no https)"):this.setSwitchMessage("No service worker support (no browser support or no valid certificate)");return}if(!("PushManager"in window)){this.setSwitchMessage("No push notification support!");return}let e="/ui_web_push/"+this.id+"/web_push_service_worker.js";navigator.serviceWorker.register(e).then(t=>{this.serviceWorkerRegistration=t,this.switchEnabled=!0,this.serviceWorkerRegistration.pushManager.getSubscription().then(s=>{s&&(this.props.autoLoad&&this.send({payload:s,topic:"auto_loaded_subscription"}),this.switchState=!0,this.setSwitchMessage("Subscribed for receiving notifications"))}).catch(s=>{})}).catch(t=>{this.setSwitchMessage("Cannot download and register service worker js file")})},unmounted(){var e,t;(e=this.$socket)==null||e.off("widget-load"+this.id),(t=this.$socket)==null||t.off("msg-input:"+this.id)},methods:{send(e){this.$socket.emit("widget-action",this.id,e)},alert(e){alert(e)},test(){console.info("custom event handler:"),this.$socket.emit("my-custom-event",this.id,{payload:"Custom Event"})},onChange(e){if(this.loadingEnabled=!0,this.switchEnabled=!1,this.switchState)try{Notification.requestPermission().then(t=>{this.subscribe(t)})}catch{Notification.requestPermission(s=>{this.subscribe(s)})}else this.unsubscribe();this.loadingEnabled=!1,this.switchEnabled=!0},subscribe(e){switch(e){case"granted":const s={applicationServerKey:this.urlB64ToUint8Array(this.props.publicKey),userVisibleOnly:!0};this.serviceWorkerRegistration.pushManager.subscribe(s).then(r=>{this.send({payload:r,topic:"new_subscription"}),this.setSwitchMessage("Subscribed for receiving notifications")}).catch(r=>{this.setSwitchMessage("Cannot subscribe to the browser push manager"),alert(`Cannot subscribe to the browser push manager:
`+r),this.switchState=!1});break;case"denied":alert(`This domain is denied to receive notifications!
It can be allowed again via the browser settings`),this.switchState=!1;return;case"default":alert(`This domain is not explicit granted to receive notifications!
It can be allowed again via the browser settings`),this.switchState=!1;return}},unsubscribe(){this.serviceWorkerRegistration.pushManager.getSubscription().then(e=>{e&&e.unsubscribe().then(t=>{t?(this.send({payload:e,topic:"new_unsubscription"}),this.setSwitchMessage("Unsubscribed to receive notifications")):(alert("Cannot unsubscribe from the browser push manager"),this.switchState=!0)}).catch(t=>{alert(`Cannot unsubscribe from the push manager:
`+t),this.switchState=!0})}).catch(e=>{alert(`Cannot get a subscription from the service worker:
`+e),this.switchState=!0})},setSwitchMessage(e){this.props.showSwitchMessage&&(this.switchMessage=e)},urlB64ToUint8Array(e){const t="=".repeat((4-e.length%4)%4),s=(e+t).replace(/\-/g,"+").replace(/_/g,"/"),r=atob(s),i=new Uint8Array(r.length);for(var n=0;n<r.length;++n)i[n]=r.charCodeAt(n);return i}}};function u(e,t,s,r,i,n){const p=a.resolveComponent("v-switch");return a.openBlock(),a.createBlock(p,{modelValue:i.switchState,"onUpdate:modelValue":[t[0]||(t[0]=b=>i.switchState=b),n.onChange],label:i.switchLabel,disabled:!i.switchEnabled,loading:i.loadingEnabled,color:"primary",messages:i.switchMessage,"hide-details":"auto"},null,8,["modelValue","label","disabled","loading","messages","onUpdate:modelValue"])}const l=h(d,[["render",u],["__scopeId","data-v-83d65bb7"]]);o.UIWebPush=l,Object.defineProperty(o,Symbol.toStringTag,{value:"Module"})});
